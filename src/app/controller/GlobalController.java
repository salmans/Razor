package app.controller;

import javafx.scene.web.WebEngine;
import app.GUI;
import data.xml.Models;
import data.xml.XmlProcessor;

/**
 * Controller for model generation and macro browsing
 * @author Ryan Danas
 *
 */
public class GlobalController
{
	WebEngine view;

	public GlobalController(WebEngine engine)
	{
		this.view = engine;
	}

	/**
	 * Generates models according to the theory currently loaded
	 * @throws Exception If models were not successfully generated by Razor
	 */
	public void generate() throws Exception
	{
		// Get the models generated from the theory as raw xml
		String rawxml = GUI.thePipe.getModels(GUI.theModel.getTheory());
		// Process the xml
		XmlProcessor<Models> processor = new XmlProcessor<Models>(Models.class);
		Models xmlModels = processor.unwrap(rawxml);
		// Update the model
		GUI.theModel.addModels(xmlModels.getModels());
		// update the view
		view.executeScript("startModels();");
		view.executeScript("updateModel();");
	}

	public void prev()
	{
		// update the model
		if(GUI.theModel.prev())
		{
			// update the view
			view.executeScript("updateModel();");
		}
	}

	public void next()
	{
		// update the model
		if(GUI.theModel.next())
		{
			// update the view
			view.executeScript("updateModel();");
		}
	}
}
