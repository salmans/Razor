-- Helper (NE for not equal)
NE(x, y) & x = y => Falsehood;

Subtypes(t, s) => Type(t) & Type(s);

Descendents(t, d) => Subtypes(t, d) | (exists s . Subtypes(s, d) & Descendents(t, s));
Subtypes(t, s) => Descendents(t, s);
Descendents(t, d) & Subtypes(d, s) => Descendents(t, s);


Class(x) => Type(x);
Interface(x) => Type(x);

Type(x) => Class(x) | Interface(x);

Class(x) & Interface(x) => Falsehood;

-- Fact
Class(Object());

-- Type Hierarchy
Type(x) => Descendents(Object(), x) | x = Object();
Descendents(t, t) => Falsehood;
Subtypes(t, s) & Class(t) & Subtypes(t_, s) & Class(t_) => t = t_;

InsType(i, c) => Class(c) & Instance(i);
holds(v) = i => Variable(v) & Instance(i);
VarType(v, t) => Variable(v) & Type(t);

-- Type Soundness
holds(v) = i & InsType(i, c) & VarType(v, t) => t = c | Descendents(t, c);


-- ? Query
exists x. Class(x) & NE(x, Object());
exists x. Interface(x);
exists v. exists i . VarType(v, i) & Interface(i);
