-- This is similar to phone1 but with types included.

-- Vocabulary
-- We have two sorts, Number and Exchange:
-- Number(x) | Exchange(x)
~(Number(x) & Exchange(x))

-- Numbers can be InService or OutOfService but it looks like they don't have to:
InService(x) => Number(x)
OutOfService(x) => Number(x)

-- Types for predicates and decisions:
GetExchange(x,y) => Number(x) & Exchange(y)
Toll(x,y) => Number(x) & Number(y)
TollFree(x,y) => Number(x) & Number(y)

-- Policy
GetExchange(src, e1) & GetExchange(dest, e1) & Number(src) & Number(dest) & Exchange(e1) => TollFree(src, dest)
GetExchange(src, e2) & GetExchange(dest, e3) & NE(e2,e3) & Number(src) & Number(dest) & Exchange(e2) & Exchange(e3) => Toll(src, dest)

OutOfService(src) & Number(dest) => Refuse(src, dest)
OutOfService(dest) & Number(src) => Refuse(src, dest)
(src = dest) & Number(src) & Number(dest) => Refuse(src,dest)

-- Query

-- Here's another solution possibly with skolem functions:
-- Toll(src,dest) => GetExchange(src,f(src,dest)) & GetExchange(dest,g(src,dest))
-- ~(f(src,dest) = g(src,dest))

Toll(src,dest) & Number(src) & Number(dest) => exists e1. exists e2. GetExchange(src,e1) & GetExchange(dest,e2) & NE(e1,e2)
~(NE(x,y) & x = y)

exists x. exists y. Toll(x,y)
