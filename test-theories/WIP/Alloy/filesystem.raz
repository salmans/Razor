-- FSObject, File and Dir
FSObject(fs) => File(fs) | Dir(fs);
File(f) => FSObject(f);
Dir(d) => FSObject(d);
File(o) & Dir(o) => Falsehood;

-- File System
Live(fs, o) => FileSystem(fs) & FSObject(o);
root(fs) = r => FileSystem(fs) & Dir(r) & Live(fs, r);

parent(fs, o) = p => Live(fs, o) & Live(fs, p) & Dir(p);
parent(fs, o) = p & root(fs) = o => Falsehood;

Live(fs, o) => (root(fs) = o) | (exists p. parent(fs, o) = p);

Contents(fs, d, o) => FileSystem(fs) & Dir(d) & FSObject(o);

Contents(fs, d, o) => ContentsTC(fs, d, o);
Contents(fs, d1, d2) & ContentsTC(fs, d2, o) => ContentsTC(fs, d1, o);

ContentsTC(fc, d, o) => (exists d1. Contents(fc, d, d1) & ContentsTC(fc, d1, o)) | Contents(fc, d, o);

ContentsTC(fs, o1, o2) & ContentsTC(fs, o2, o1) => Falsehood;


Live(fs, o) & root(fs) = r => ContentsTC(fs, r, o) | r = o;


parent(fs, o) = p => Contents(fs, p, o);
Contents(fs, p, o) => parent(fs, o) = p;

-- Move
Move(fs1, fs2, x, d) => FileSystem(fs1) & FileSystem(fs2) & FSObject(x) & Dir(d);
Move(fs1, fs2, x, d) => Live(fs1, x) & Live(fs1, d);
Move(fs1, fs2, x, d) => parent(fs2, x) = d;

Move(fs1, fs2, x, d) & parent(fs1, o) = p1 => parent(fs2, o) = p1 | x = o;
Move(fs1, fs2, x, d) & parent(fs2, o) = p2 => parent(fs1, o) = p2 | x = o;

-- Remove
Remove(fs1, fs2, x) => FileSystem(fs1) & FileSystem(fs2) & FSObject(x);
Remove(fs1, fs2, x) => Live(fs1, x);
Remove(fs1, fs2, x) & root(fs1) = x => Falsehood;
Remove(fs1, fs2, x) => root(fs1) = root(fs2);

Remove(fs1, fs2, x) & parent(fs1, o) = p => parent(fs1, o) = p | x = o;


-- ? MOVE OK
--Move(fs1(), fs2(), file(), dir());
--Move(fs1(), fs2(), x, d) & Live(fs1(), o) & Live(fs2(), o) => Falsehood;

-- ? REMOVE OK
Remove(fs1(), fs2(), obj());
(exists x. Live(fs1(), x) & NotLive(fs2(), x)) | (exists x. Live(fs2(), x) & NotLive(fs1(), x));
NotLive(fs, x) & Live(fs, x) => Falsehood;
